{{- range $key, $value := .Values.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $key }}
  labels:
    app: {{ $key }}
spec:
  replicas: {{ $value.replicas | default $.Values.global.replicaCount }}
  selector:
    matchLabels:
      app: {{ $key }}
  template:
    metadata:
      labels:
        app: {{ $key }}
    spec:
      containers:
        - name: {{ $key }}
          {{- if hasPrefix "/" $value.image.repository }}
          image: "{{ $.Values.global.repository }}{{ $value.image.repository }}:{{ $value.image.tag | default $.Values.global.image.tag }}"
          {{- else }}
          image: "{{ $value.image.repository }}:{{ $value.image.tag | default $.Values.global.image.tag }}"
          {{- end}}
          imagePullPolicy: "IfNotPresent"
          {{- if not (eq $value.environment "disable") }}
          envFrom:
            - secretRef:
                name: env-secret
          {{- end }}
          resources:
            limits:
              cpu: {{- if index $.Values.global.resources "limits" }}
                {{- if index $.Values.global.resources.limits "cpu" }} {{ $.Values.global.resources.limits.cpu }}{{ end }}
              {{- end }}
              memory: {{- if index $.Values.global.resources "limits" }}
                {{- if index $.Values.global.resources.limits "memory" }} {{ $.Values.global.resources.limits.memory }}{{ end }}
              {{- end }}
            requests:
              cpu: {{- if index $.Values.global.resources "requests" }}
                {{- if index $.Values.global.resources.requests "cpu" }} {{ $.Values.global.resources.requests.cpu }}{{ end }}
              {{- end }}
              memory: {{- if index $.Values.global.resources "requests" }}
                {{- if index $.Values.global.resources.requests "memory" }} {{ $.Values.global.resources.requests.memory }}{{ end }}
              {{- end }}
          {{- if hasKey $value "probes" }}
          {{- if hasKey $value.probes "livenessProbe" }}
          livenessProbe:
            {{- if hasKey $value.probes.livenessProbe "command" }}
            exec:
              command:
                {{- range $value.probes.livenessProbe.command }}
                - {{ . }}
                {{- end }}
            {{- end }}
            {{- if hasKey $value.probes.livenessProbe "httpGet" }}
              httpGet:
                path: {{ $value.probes.livenessProbe.httpGet.path | default "/" }}
                port: {{ $value.probes.livenessProbe.httpGet.port | default 80 }}
                scheme: {{ $value.probes.livenessProbe.httpGet.scheme | default "HTTP" }}
                host: {{ $value.probes.livenessProbe.httpGet.host | default "localhost" }}
            {{- end }}
            {{- if hasKey $value.probes.livenessProbe "tcpSocket" }}
              tcpSocket:
                port: {{ $value.probes.livenessProbe.tcpSocket.port | default 80 }}
            {{- end }}            
            initialDelaySeconds: {{ $value.probes.livenessProbe.initialDelaySeconds | default 1 }}
            periodSeconds: {{ $value.probes.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ $value.probes.livenessProbe.timeoutSeconds | default 5 }}
            successThreshold: {{ $value.probes.livenessProbe.timeoutSeconds | default 1 }}
            failureThreshold: {{ $value.probes.livenessProbe.timeoutSeconds | default 2 }}
          {{- end }}
          {{- if hasKey $value.probes "readinessProbe" }}
          readinessProbe:
            {{- if hasKey $value.probes.readinessProbe "command" }}
            exec:
              command:
                {{- range $value.probes.readinessProbe.command }}
                - {{ . }}
                {{- end }}
            {{- end }}
            {{- if hasKey $value.probes.readinessProbe "httpGet" }}
              httpGet:
                path: {{ $value.probes.readinessProbe.httpGet.path | default "/" }}
                port: {{ $value.probes.readinessProbe.httpGet.port | default 80 }}
                scheme: {{ $value.probes.readinessProbe.httpGet.scheme | default "HTTP" }}
                host: {{ $value.probes.readinessProbe.httpGet.host | default "localhost" }}
            {{- end }}
            {{- if hasKey $value.probes.readinessProbe "tcpSocket" }}
              tcpSocket:
                port: {{ $value.probes.readinessProbe.tcpSocket.port | default 80 }}
            {{- end }}
            initialDelaySeconds: {{ $value.probes.readinessProbe.initialDelaySeconds | default 1 }}
            periodSeconds: {{ $value.probes.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ $value.probes.readinessProbe.timeoutSeconds | default 5 }}
            successThreshold: {{ $value.probes.readinessProbe.timeoutSeconds | default 1 }}
            failureThreshold: {{ $value.probes.readinessProbe.timeoutSeconds | default 2 }}
          {{- end }}
          {{- end }}
      {{- if $value.volume}}
          volumeMounts:
            - mountPath: {{ $value.volume.mountPath }}
              name: {{ $key }}
      volumes:
        - name: {{ $key }}
          persistentVolumeClaim:
            claimName: {{ $value.volumes.claimName }}
      {{- end }}
{{- end }}